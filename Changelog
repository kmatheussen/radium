Most important changes 3.3.1 -> 3.3.2
* Possible to select VST presets in the instrument widget
* Possible to change name of the current VST preset in the instrument widget
* Don't crash when deleting vst plugin (bug introduced in 3.3.1)
* Don't add undo if we couldn't create fx node or pitch
* Don't assert crash reporter if trying to create an fx node in the
  first legal position, or the last legal position. Only show assert
  reporter if trying to create before first legal position, or
  after last legal position.


Most important changes 3.3.0 -> 3.3.1
* Fix crash during startup on windows 32 bit.
  Bug (re)introduced in 3.3.0 (the NDEBUG option again).
* Fix a copy-and-paste error which caused ppqPositionOfLastBarStart
  to always have the value 0.0. Might make a difference
  on some VST plugins.
* Automatically uncheck the "GUI" button in the instrument
  widget if the native plugin gui was closed by closing
  the window directly.



Most important changes 3.2.9 -> 3.3.0
* Windows: Turn off jack "-S" checking in production again. Still doesn't work.
* Don't inform more than one time about a newer version of radium
* Removed comment in the preferences dialog about MultiCore being
  an experimental feature. It seems stable.
* windows: Use a home made jack process thread to make the unhandled
  exceptions filter work also when crashing in the main audio thread.
* Pause the gl thread for a second when opening a new window or dialog.
  This might prevent some crashes caused by buggy gfx driver
* Turn off modal windows by default for AMD/catalyst and Intel drivers
  on Linux since the pausing seems to fix the crashes




Most important changes 3.2.8 -> 3.2.9
* Windows: Don't start crash reporter all the time when loading and using VST plugins.
  Bug was introduced in V3.2.5
* VST: load/save FXB and FXP files
* Fix note add bug. Dont make it polyphonic unless polyphonic is true. Bug was introduced in V3.2.4.
* Update instrument widget after undo/redo (fix for non-moving peaks after undoing/redoing)
* Try to fix cpu label width in Windows
* Do automatic backup every minute if there are unsaved edits and radium is not playing.
  The backup interval can be changed in the preferences. It can also be turned off.
* Replaced a bunch of calls to RError with calls to GFX_Message
  (RError was used the wrong way, causing uses messages to be reported as program errors)
* Always show message if there is a disk error
* Write to temporary file first if saving to an existing file to avoid destroying an
  existing file if saving fails
* Tried to improve stability after jack has shut down. Still not working well though.
  User should not do anything else than save and exit if jack shuts down.
* Fix plugin names in crashreporter when running multi core



Most important changes 3.2.7 -> 3.2.8
* Remove sound object from mixer before freeing buffers (might fix mysterious crashes)
* Fix audio glitches when changing number of CPUs
* Show the crash/assert window for most warning/error messages
* Fix a LADSPA bug where sometimes the effects were set to default after undoing a deletion.
* api: printMixerTree (mostly for debugging)
* Finding peaks is approx. 2-4 times faster by using code from the JUCE SDK.
  (juce::FloatVectorOperations::findMinAndMax)
* Made the CPU widget fixed size. The bottom bar doesn't move left and right anymore.
* Removed old sound object scheduling system. Everything now goes through
  through the multicore scheduler, even when running single-threadedly.
* Fixed realtime update of waveforms when changing track volume and track panning
* Rewrote bus system. Buses are now just hidden sound object connections. Can in some
  situations improve multicore performance.
* Draw current sound object in darker color when selecting with
  left button, not only right button


Most important changes 3.2.6 -> 3.2.7
* Mixer: Must press left mouse button on a sound object to select it. Dont just set the the one currently under the mouse.
* Added volume value to connections. This is both necessary to later optimize/simplify
  the bus system (especially in conjuction with multi core), and to be able to control the volume of a connection.
* Dont start making an audio connection in the mixer if the start pos doesnt have inputs or outputs
* Fixed a bug which could cause the program to freeze when deleting sound objects,
  loading songs, undoing, redoing, etc. Bug was introduced in V3.2.2.
  *** Radium between V3.2.2 and V3.2.6 are particulary unstable. ***
* Make sure song comment window is shown on top of all other windows after loading a song.



Most important changes 3.2.5 -> 3.2.6
* Fix: 1. General realtime performance, and: 2. Crashes when multicore is enabled.
  (Don't use QString in realtime code, and especially don't access the same QString from several threads simultaneously.)
  Bug introduced in 3.2.5.
* Always block crash/assert-reporter in non-RELEASE mode, and never block in RELEASE mode
* Avoid showing assert reporter when exiting after jack has shut down.


Most important changes 3.2.4 -> 3.2.5
* Start crashreporter also when just hitting an assert.
* Improved crash reporter. Should hopefully work better in Windows.
  The reports also includes a simple event log now.



Most important changes 3.2.3 -> 3.2.4
* Make all dialogs modal by default if using intel or binary amd driver on linux (to avoid crashes)
* Ensure all notes starts before they end, when recording from MIDI input.
* Various note positions and value validations
* Unset OPENSSL_CONF environment variable during startup. Fixes rare crashes during startup.



Most important changes 3.2.2 -> 3.2.3
* Fix qt version mismatch problem on linux binaries (and possibly windows and osx as well)
* windows: Fix search for missing "-S" argument for jackd.
* Replaced the use of QSemaphore with a native one based
  on this code: https://github.com/preshing/cpp11-on-multicore/blob/master/common/sema.h
  The previous code could in rare situations cause priority inversion.
* Improved multi core a lot. Seems to work fine on Windows now.



Most important changes 3.2.1 -> 3.2.2
* Show message during startup if there is a newer version of the program available.
* Reorganized the edit menu a little bit
* Moved show/hide line numbers configuration from the menues and into the preferences dialog
* Windows: Don't inform that Radium was unable to find jack process command line arguments in RELEASE builds
* "CPU": Show min/avg/max instead of just max. Useful while figuring out multi core implementation.
  (it's not working that well on Windows yet)
* Remove some unnecessary locking/waiting in the multicore scheduler
  (probably has very little impact on performance though)



Most important changes 3.2.0 -> 3.2.1
* Another default color scheme. A little bit darker and white text.
* Increase default font size from 10 to 11 to get less flickering when using a white-on-black color scheme
* Make color schemes with white text on black background look better.
* Shut down jack at the right moment. Avoids crash at exit.
* Fix some mixer UI/GUI issues.
* Changed various button handlers from "pressed" callbacks into "clicked" callbacks.
  Fixes buttons stuck in pressed state.
* Removed the "scrollplay" and "window update" options from the menues.
* Moved the MIDI preferences stuff from the MIDI menu and into the preferences dialog
* Band-aid to avoid crash if song is saved with a patch that has no corresponding chip.
* Tooltip for the quantization value in the MIDI post-recording dialog.
* Also delete elinks when deleting all connections, not just the links.
  Fixes crash if redoing an undoing of a deletion of a sound object.
* Improve multi core by running most cpu intensive sound objects first
* CPU: Show the maximum CPU usage which was measured during the last second,
  not just the current CPU usage.
* Include the custom qjackctl in the 32 bit windows binaries, not just
  the 64 bit binaries.



Most important changes 3.1.4 -> 3.2.0
* Include a custom version of qjackctl in the Windows version. (i.e the "Jack Command" program)
  Hopefully there will be less struggle to start jack now since this version has better default
  options and some bugs fixed.
* Ensure all source files are compiled with sse support (-mfpmath=sse -msse2) in the binaries.
* Move scrollplay and the "multiply etc." option into the preferences dialog under a new "Edit" tab.
* Save scrollplay in config file
* Rename the default "Chorus" and "Reverb" buses to "Corus Bus" and "Reverb Bus"
* Moved OpenGL, CPU and VST preferences into a new Preferences dialog.
* Dont stop processing plugins if using too much CPU. Some plugins might overcompensate when
  they start again. Instead just stop playing, and if that didn't help,
  stop processing plugins as well.
* Fix soundfile saving (don't stop because using too much CPU)
* Show warning message if unable to acquire real time priority
* Multithreaded audio processing (i.e. "Multi-core")



Most important changes 3.1.3 -> 3.1.4
* If plugin is not found during loading, give option to select a different plugin
* Show the sound object menu when right-clicking on an existing sound object in the mixer
  (doing the same as "replace" in the instrument widget)
* Add "replace" button to instrument widget
* Send inital values first time a "MIDI Messages" object is playing.
* Fix plugin info dialog
* VST: Update Radium sliders when changing controllers in native GUI.
  This indirectly causes automation to update the sliders as well, but that's actually
  what happens underneath for VST plugins too, so that's a good thing.
* Rendering: Reset gfx timing when jumping to the start of a block.
  (removes the "dragged by a spring" effect)
* Linux: Show info during startup about the Gallium AMD OpenGL driver (if using that driver)



Most important changes 3.1.2 -> 3.1.3
* Don't crash if reducing the number of lines in a block.
  (This also fixes some crashes when importing MIDI file)
* Sort notes by pitch for same-positioned notes.
* Handle gracefully if jack shuts down. (dont freeze program)
* Fixed moving the start of a pianonote when the pianonote
  has pitch changes.



Most important changes 3.1.0 -> 3.1.2
* Fix automation after loading song
* Fix a memory corruption for plugins with more than 2 channels
* Send automation messages when track is ON, not OFF



Most important changes 3.0.7 -> 3.1.0
* Weak-link to the Jack library to avoid having to use the included version of Jack.
* Don't crash if EL=0 and mousewheeling, plus behave like EL=1 if just scrolling and EL=0 ("edit lines").
* Don't crash if pressing redo after loading a song.
* Write notename above notes in the pianobar, and other graphical improvements.
* Fix mouse issues when first pitch or first velocity in a note.
* A new sound object called "Midi Messages" which can be used to send MIDI messages
  to other sound objects. Can for instance be used to send pitch bend changes to VST plugins.
* Option to show linenumbers instead of bars/beats
* Updated ladspa rdf info for the kokkinizita plugins.
* Customly compiled LADSPA plugins for OSX, Win32, and Win64. The included
  plugin sets are now: calf, caps, cmt, swh, tap, and all kokkinizita plugins.
* 64 binaries for windows
* Include instructions on how to get audio from other simultaneously running ASIO programs
  in and out of the Radium mixer.



Most important changes 3.0.6 -> 3.0.7
* Fix track-width mouse handling when pianoroll is visible



Most important changes 3.0.5 -> 3.0.6
* Simple pianoroll (Left Alt + P or Let Ctrl + P to enable/disable)
* Fix crash that sometimes could happen if scrolling to rightmost track
* Updated s7 scheme to latest version
* Some minor changes to VST initialization which might prevent some plugins from crashing
  during startup.



Most important changes 3.0.4 -> 3.0.5
* Always scroll-play when pressing up or down arrow, even "edit lines" is bigger than 1
* Fix more than two vst plugins in the full version
* load/save: Fix bug where empty string was saved as "" instead of "_________empty__________",
  plus hack so that some old songs where this happened can be loaded again.



Most important changes 3.0.3 -> 3.0.4
* MIDI: Option to always record velocity



Most important changes 3.0.2 -> 3.0.3
* Add options to multiply the number of lines to scroll by the "Edit lines" value
* VST: Fix crystal and other plugins using "main" instead of "VSTPluginMain".
  (forgot this when switching to juce for hosting vst plugins)



Most important changes 3.0.1 -> 3.0.2
* Ctrl+J jumps to bar/beat instead of line. (line numbers are not visible anymore)
* Don't update effect values for plugin while loading a plugin. Might
  stop buggy plugins from crashing.
* Option to record MIDI line by line and monophonic in the MIDI menu. (as before)
* Fix realtime color update in the editor when using the color config dialog
* Append "-qt4" to the last resort value in find_moc_and_uic_paths.c. (Arch linux fix)




Most important changes 3.0.0 -> 3.0.1
* Added a note that the qjackctl "Delay time" value might need to be increased
  on windows for the system to start up.
* Windows: Enable left win key again when radium is not active
* Remove the "createVelocity: placement before note start for note #%d" error entirely



Most important changes 3.0.rc22 -> 3.0.0
* Bumped version number to 3.0.0


Most important changes 3.0.rc21 -> 3.0.rc22
* Readded calf chorus effect to new_song and demo song.


Most important changes 3.0.rc20 -> 3.0.rc21
* Don't show error window if trying to create velocity before start of the first note
* build: Check for the steinberg vst headers in check_dependencies.sh




Most important changes 3.0.rc18 -> 3.0.rc20
* Compile the windows version with -fno-tree-vectorize since audio/SoundProducer.cpp crashed in windows 8
  when using mingw gcc 4.7.2. (that behavior started in 3.0.rc15)



Most important changes 3.0.rc17 -> 3.0.rc18
* Fix crash in certain situations if changing instrument for a track with automation data, while playing



Most important changes 3.0.rc16 -> 3.0.rc17
* Set octave 4 as keyboard octave in new_song.rad (not 10)
* Fix scheduler memory handling. Crash fix.
* Turn up main volume on the demo song



Most important changes 3.0.rc15 -> 3.0.rc16
* Remember the path of the last loaded / saved preset.
* Use the Qt file dialog instead of the native one, since filters don't work in the native file dialog in windows 7
* Fix saving in Windows
* Loading and saving presets now saves the whole instrument, not just the slider/button values.
* Added "Load Preset" to the plugin menu.
* Fix realtime peak updates when changing the slider values for the sampler instrument (again)
* Don't create undo if just changing current instrument
* Changed lpb from 8 to 4 and bpm from 78 to 156 in the Blowfish song
* Clean up bars/beats rendering, and draw a single-pixeled line between all tracker lines again
* Upgrade bdw-gc to 7.2f, and add "-g -O2" flags for the build




Most important changes 3.0.rc14 -> 3.0.rc15
* vst/linux: Wait for child window to be created (fix for no content in vst window)
* Fix memory corruption for plugins with more than 2 output channels when running in 32 bit mode,
  and more than 4 output channels when running in 64 bit mode.
* Fix crash when the cursor is placed on the last line and changing the LZ value.
* windows: Provoke crashreporter to kick in when selecting "quit" in the error/warning window
* Minor improvement to the vst preferences dialog
* VST: Make sure all timing info are defined
* Remove support for CFLAGS and LDFLAGS. Seemed like the rtmidi (or possible) juce cflags somehow smitted over to radium somehow.
* Fix non-realtime behavior in VST plugins. For instance, audio shouldn't stall for a short while anymore when opening the GUI.
* Provide ppq value of the last bar start to VST plugins.
* Hack juce into not compiling -march=native. Might fix issues with VST plugins on computers
  with AMD CPU or older intel CPU.
* Don't show a show/hide track popup when right-clicking on the reltempo slider
* Hide LPB track in new_song.rad
* Draw cents on top of the peaks, not below.




Most important changes 3.0.rc13 -> 3.0.rc14
* Windows: Don't abort program if glGetError() returns an error.
  (i.e. compile the visualization library with the -DNDEBUG option)
* Show opengl info, qt version and credits in the "about window".
* crashreporter: Include QGLFormat::OpenGLVersionFlags in report
* crashreporter: Add running time to report. Useful to see if the crash happened during startup.
* crashreporter: Only insert opengl info and plugin name in the first call to CRASHREPORTER_report_crash
* tooltip for the MSAA opengl option
* Some post MIDI recording tool ui tweaks
* Use color #8 for bar num
* Tooltips for LPB and BPM widgets




Most important changes 3.0.rc12 -> 3.0.rc13
* Metronome
* Sample player: Enable looping for all sounds, not just wav
* Protect reset effect value with player lock
* Protect all remaing calls to Q<class>::exec() with GL_lock()
 (Linux Intel/AMD gfx card crash fix)
* Fix graphical coordinates not updated when changing font size
  and possible other situations (bug introduced in 3.0.rc12)
* Adjust tempo color graph and line number width a little bit




Most important changes 3.0.rc11 -> 3.0.rc12
* Show bars and beats instead of line numbers
* Rearranged timing tracks order.
* Don't show signature and lpb track in the demo song
* Update lz tooltip
* Protect all calls QFileDialog with GL_lock() (Linux Intel/AMD gfx card crash fix)
* Show popup for selecting instrument when right-clicking in the fx area of a track
* Update editor graphics when pressing or releasing mouse in the mixer
* Don't crash if pasting track containing deleted instrument
* crashreporter: Send OpenGL information
* crashreporter: Try to make the text clearer about only sending one report per crash
* Fix focus issues in the MIDI tools post recording dialog
* Adjusted grid track width
* More quantization options
* Readd chorus effect to newsong.rad
* Fixed bug in path resolver
* Darker color for measure start beat
* Import time signatures from MIDI files
* More accurate tempo graph rendering
* VST plugins: Never set isLooping to true since we never jump back in time
* Improve the examples when adding/editing note/pitch
* Add popup menues to show/hide the time tracks
* Ctrl+J jumps to line
* Time signature track
* Hide some menu entries in win/mac that only works in linux




Most important changes 3.0.rc10 -> 3.0.rc11
* Make the default track volume 100%. (MIDI recordings
  should not sound differently when played back)
* Windows: Fix left alt key
* Improved waveform graphics rendering. Improved quality
  and put a limit on cpu usage
* Make the fluidsynth instrument support pitch wheel and
  control change when played directly from MIDI.
* Fixed a few MIDI input issues
* midi/alsa: Use SCHED_RR for input threads, not SCHED_OTHER.
* Improved PPQ/BPM calculation
* Crashreporter: Detect currently running plugin
* Linux: Don't report that Nvidia users have AMD card.
* Pause plugins for 5 seconds if using too much cpu
* Show a "stop playing" button in the realtime warning message
  window.
* midi: Send all raw midi data from input into current patch
* VST: Send and receive raw midi, not just "note on"/"note off"/
  "polyphonic aftertouch".
* scheduler: Run events generated by RT_process functions
  functions right away if they belong to the current audio block
* Make sure the sampleposition values genereted by vst plugins
  are in the legal range
* Fix block tempo timing for events generated by a VST plugin
  (still not tested though, need plugin to test with)
* clap: The "time" argument for RT_Process is already a
  "steady_time" variable. (not necessary to manually generate one)
* Ensure event-producing soundproducers are run before the receivers
* Pd: Fix MIDI velocity when receiving notes
* Show warning/error message as popup window in RELEASE mode.
* "About" window




Most important changes 3.0.rc9 -> 3.0.rc10
* Render: Write "rec" in the track being recorded (MIDI that is)
* Windows: Fix crash if get_windows_command_lines fails
* MIDI post-recording tools dialog (make monophonic and quantitize functions)
* Proper implementation of PlaceAdd/Sub/Mul/Div (actually just use s7 rational)
* Protect g_times_storage with mutex (crash fix)
* Use rational number for quantization (no rounding errors anymore)
* Allow strings with just one number when reading rational string (grid/lz/quantization)
* Add a "split track into monophonic tracks" function
* Dont stop playing if adding a stop "note".
* Function to make track monophonic destructively
* Refactor UpdateReallines to avoid holding the player lock all the time
* Dont let error window be a popup window. (Couldn't switch virtual desktop then)
* Record MIDI note on/note off accurately while playing, as a MIDI sequencer
* Use posix priority inheritance in Linux instead of boosting/unboosting manually + various threading/mutex fixes




Most important changes 3.0.rc8 -> 3.0.rc9
* Don't use clang in Linux. SIGSEGV signal is not catched,
  and crashreporter is not working (tested both 3.4 and 3.5)
* Update nouveau warning
* Don't give additional warning about mesa if using intel or nouveau
  driver on Linux.
* Use custom THREADING_get_priority/THREADING_set_priority functions
  for manual priority inheritance (crash fix when using MIDI input).
* Update graphics when adding notes using MIDI input



Most important changes 3.0.rc7 -> 3.0.rc8
* Both read and write config files as unicode. Earler it only used unicode for writing, and not reading, and that led to growing and growing files on windows
* windows: Fix AltGr key
* mouse: Fix left win key on windows



Most important changes 3.0.rc6 -> 3.0.rc7
* opengl: Update instructions for intel driver
* opengl: Show instructions for AMD users during startup
* Just show() the comment window, dont run exec() on it
* Fix degree symbol in the pan slider (ascii->utf8 fix)
* Don't freeze program if moving the cursor beyond the leftmost track
  when either the lpb, bpm, or the reltempo track is not visible.
* OpenGL preferences dialog
* Upgrade to latest visualization library from github (fixes for AMD, etc.)
* Fix crash when undoing block while playing
* opengl: Use TRIANGLES+shader to draw that gradient line above the note name instead of GL_LINE+textile
* OpenGL: Dont use GL_LINES. Create lines from triangles instead. Seems like only nvidia draws GL_LINES decently.
* opengl: Reduce number of contexts by OR-ing 15 into the color values. Doesnt seem noticable, and cpu usage is reduced significantly
* Tweaked how the tracker cursor looks



Most important changes 3.0.rc5 -> 3.0.rc6
* build: Remove NDEBUG flag from RELEASE_BUILD_OPTS since it makes radium crash on windows. Strange stuff.
* Replaced "<click me>" with "(click me)"
* Give option to init LADSPA first if initing VST first and TLS is empty
* Fix write access check
* Don't resolve VST plugins during startup if initializing LADSPA plugins first.
  Just assume it is a VST plugin if the suffix is right.
* Dont show GUI button for gui-less vst plugins. (and don't crash if double clicking it in the mixer)
* Upgrade to latest visualization library at github
* Fix keyboard handling in windows
* Give warning and option to exit if OpenGL is older than 1.4.
* Mouse: Fix one-track blocks
* Clap plugin skeleton


Most important changes 3.0.rc4 -> 3.0.rc5
* Workaround for empty TLS when loading VST plugins
  (Fix for u-he plugins)
* Support VST shell plugins
* Fix VST GUI close and re-open (not just show/hide window)
* VST sub menues
* Only keep LADSPA plugin libraries in memory when they are used
* Cleaned up native keyboard handling a little bit
* Force message window in front
* Various OSX fixes
* Improved gfx driver warnings
* Give specific information about Intel GFX, instead of warning about using MESA
* fix "./" in the sample file requester
* More unicode fixes


Most important changes 3.0.rc3 -> 3.0.rc4
* Make sure packages are not built with -march=native for the binaries
* Fix nasty memory corruption bug (introduced in 3.0.rc3)
* Calculate current BPM from beat position values (used by VST plugins)
* Always show cents if cents!=0
* Always show notes graphically when noteshowtype==GFXTYPE1
* Right mouse button reset slider values in the editor
* Show warning if there is no write access to the binary directory



Most important changes 3.0.rc2 -> 3.0.rc3
* Fix pd plugin on fedora 21 (and other distributions having wish8.6)
* Fix various crashes related to changing the number of visible lines while playing
* Use Unicode everywhere. Don't crash if running Radium in a non-ascii path.
* Fix "use last estimated vblank value" button
* Fix clang 3.5 compilation
* Give specific warning if using the Nouveau driver
* Fix memory leaks when loading samples



Most important changes 3.0.rc1 -> 3.0.rc2
* Ignore environment CFLAGS so that binary is not built with march=native.


Most important changes 3.0.beta2 -> 3.0.rc1
* Mouse handling rewritten
* Various graphics enhancements
* Lots of bugs removed
* Lots of features added


Most important changes 3.0.beta1 -> 3.0.beta2
* Set CMAKE_BUILD_TYPE for Visualisation library to RelWithDebInfo


Most important changes 1.9.x -> 3.0.beta1
* Rewritten editor graphics. Using OpenGL instead of Qt.
* Smooth scrolling.


Most important changes 1.9.42 -> 1.9.43:
* Remember and edit jack port names
* Removed use of libiberty.h. Also add check for -liberty in check_dependies.sh
* Pd: Simplified API a bit and added r_time.pd
* Simplify install instructions
* Also exit crashreporter if main program crashes extremely hard
* Also reset patch timing when stopping to play
* Pd: Upgraded to latest libpds. It contains a bunch of new radium entries in the Put menu
* Pd: Finishing the new API. Various fixes, improvements, documentations
* Make sure FX are scheduled with highest priority (i.e. ensure effects are sent out before note on), plus clean up the scheduler priority system
* Pd: pipe help patches, and Note_Off_Position.pd example patch
* Pd: Message for setting block reltempo
* PD: Finishing the note api
* Fix bug in scheduler
* Pd: Add native functions for sending and receiving notes. (r_note_on, r_note_off, and radium_receive_note_on and radium_receive_note_off messages)
* Pd: Fix duration bugs in r_line and r_subline
* Fix voice is not turned off
* Use float for notenum everywhere, and use id as note identifier.
* Pd: Frame-accurate time information + line and subline duration
* Temporary fixes for crashing if deleting System Out.
* 1024x800 tweaks
* Various smaller bug fixes and internal improvements


Most important changes 1.9.41 -> 1.9.42:
* Support 1024x800 screens
* Add show/hide buttons for sample browser and plugin controls.


Most important changes 1.9.40 -> 1.9.41:
* Fix VST plugin scan


Most important changes 1.9.39 -> 1.9.40:
* Temporary fixes for crashing if deleting System Out.
* Ask each 30th seconds if continuing searching for vst plugins.
  (prevent program from spending a long time if, for instance, searching root)


Most important changes 1.9.38 -> 1.9.39:
* Never disable the voices widget (instrument widget)


Most important changes 1.9.37 -> 1.9.38:
* Fix crash-bug when inserting lines
* Add "dontshowagain" button to RT_Message
* Give proper warning when jack port init fails, and dont crash


Most important changes 1.9.35 -> 1.9.37:
* Add "All files" option to the file requesters
* Proper postfix filter in filerequester when importing midi file
* text draw: Fix for crash when painting ranged notes with subpitch
* vst: Return correct samplePos in audioMasterGetTime
* Fix GFX_Menu not being able to return selection higher than 9
* Pd: radium_time message (containing time and line information)
* Non-OSX: Search for VST plugins recursively
* Get "keys" file path the same way as color and config, plus support comment after key
* Bottom bar and mixer widget tooltips (Atte Jensen)
* Atte Jensen's patch to read key names from ~/.radium/keys
* Make left alt open menues
* Fix ESC and Arrow keys while navigating menues.
* Fix keys for non-US language setting
* Reset Font size resetted to the default font size, not user font size. Fixed
* New event keys: CALCULATOR, MAIL, HOMEPAGE
* Add missing key events, such as 0R1, LR1, etc.
* Turn off drunk velocity by default
* Changed default ADSR(+H) values to neutral
* Put the <new> instruments first when selecting track instrument (F12)
* Always write cents if track is wide
* Fix keyboard modifier keys
* Configurable line separator opacity
* LPB line coloring (opacity can be set in edit -> global config)
* Renamed "MIDI input on/off" to "Edit On/off" (because that's what it really is)
* Update midi input checkbutton when pressing esc
* Fix SPS spinbox focus
* Only show song files in load/save requesters
* Added $HOME/.ladspa to the list of ladspa paths, when LADSPA_PATH is not defined
* Instructions on where radium gets menues.conf and keybindings.conf
* Use $HOME/.radium/menues.conf and $HOME/.radium/keybindings.conf if they exist
* Mapped XK_ISO_Level3_Shift to EVENT_ALT_R
* Fix open editor when editor is "emacs -nw"
* Make escape key exit string req, same as return
* Add "import radium as ra" in top of keybindings.conf, plus example code how to make space play/stop depending on whether you are playing
* New API function: isPlaying
* Updated ubuntu/debian package list in README


Most important changes 1.9.34 -> 1.9.35:
* sampler instrument/crossfade: Remove debug printing in realtime code
* fast_log_exp.dsp: Fix pun_float_to_int proto in the faust "ffunction"
* build: Print out message if a command isn't found (make "which" more verbose)
* Pitch area widens when right-clicking inside it, not when moving mouse on top of it.
* Add effect to correct track when right clicking.


Most important changes 1.9.33 -> 1.9.34:
* Disable pd for all builds except linux (since libpds only exists on linux for now)
* windows: Add media keys (mute, volume down/up, stop and play).
* dont crash when a pitch is deleted while its being moved with the mouse
* Avoid memory corruption if settings_version is not in settings
* Patch color, step 1: some experimentation (some diffuse colors used in track headers
  and the mixer sound objects.
* When switching to a new block where current line is the last line,
  set current line to first line instead.
* Possible to switch block while playing.
* Adjustable crossfade length (when looping) for the Sampler instrument
* windows: Add EVENT_MENU button


Most important changes 1.9.32 -> 1.9.33:
* Pitch glide between notes. Implemented for the Pd instrument, the sampler instrument
  and all the Physical modelling instruments.
* Edit pitches with mouse
* Automatically make current track wider
* Show Resize cursor when its possible to resize track
* mouse: ctrl: slows down, lshift: limit horizontal, lextra: limit vertial
* sampler instrument: Fix saving loop on off button state
* Made MENU button open block configuration (left meta is often unavailable)
* Made VOLUME/PLAY/STOP/MUTE keys configurable in keybindings.conf
* Fixed memory corruption in blocklist when name of block was longer than 20 (!)
* Use standard paths for LADSPA plugins if LADSPA_PATH is not set
* Give message if a plugin generates abnormal signals, plus zero the signal.
* menues: Be more intelligent about which program to open keybindings.conf/menues.conf/externals_list.txt with.
* pd: Upgrade libpds to latest version (Use system clipboard to store cut/copy/paste data (to cut/copy/paste between different pd instances))
* Fix MMD loader
* Note play indicator visual improvement (blinking circle)
* Enable volume up/volume down/mute/play keyboard buttons


Most important changes 1.9.31 -> 1.9.32:
* Button for setting random effect values.


Most important changes 1.9.30 -> 1.9.31:
* New demo song: BlowFish! Made by www.magnetophon.nl
* Save hashmap elements in sorted order so that songs can more easily be compared textually
* Menu entry to show name of all included pd externals
* Help menu options to edit keybindings and menues
* Song comment dialog
* Fix "Switch Window Configuration" menu option
* Removed "Error. y2>=window->height: ..." error. Just print to stderr instead.
* Removed the "Something strange just happened in the function Blt_markVisible" warning (print to stderr instead)
* Option to set number of scrolls per second. Scrolling too often can be tiresome for the eyes.
* Make it easier to connect objects and see connections in the mixer, plus adjust object sizes
* Patchbay sound object
* Fix crash loading Soundfonts in the Fluidsynth and Sampler instrument
* Show stars around filename if theres unsaved data
* When quitting or loading, only ask sure/yes/no if edited since last save.
* Change "Set Patch For Track" to "Set Instrument For Track" in the instruments menu.
  The word "patch" should not be exposed to the user anymore.
* Be able to load files with DOS char set
* Changed internal radium block size to 64 (similar to Pd)
* Sending note events between sound objects (green lines)
* Enable undo for on/off effect controllers
* Pd extended is included as a sound object. 921 externals are included. GUI is working.
  Several instances is working. Can be used to write both audio effects and note effects.
* Fix qt paths on Archlinux (Javafant/archlinux)
* Many minor bug fixes


Most important changes 1.9.29 -> 1.9.30:
* Fix for saving floats in wrong format for certain country settings
* Always show slot indicator in mixer gui


Most important changes 1.9.28 -> 1.9.29:
* Make it compile

Most important changes 1.9.27 -> 1.9.28:
* Revert back to fausts denormal handling. Hopefully fixes crash on CPUs without sse2.
* Fix vst plugin memory corruption


Most important changes 1.9.26 -> 1.9.27:
* Undo/redo for the compressor.


Most important changes 1.9.25 -> 1.9.26:
* Fix union compilation error.


Most important changes 1.9.24 -> 1.9.25:
* System compressor
* Compressor and equalizer GUI can be shown/hidden.
* Use fast log/exp functions for the multiband compressor.
  (Huge improvement in CPU usage for the demo song)
* Fixed key used for shared memory in crashreporter.
* Various


Most important changes 1.9.22 -> 1.9.24:
* Crashreporter works in Windows.
* Write settings to disk when selecting Set Default Editor Font
* Dont crash when using MIDI menu unless the current instrument is a midi instrument
* Workaround for bug in newer versions of libbfd, causing compilation to fail. Patch from James Morris
* Wait to handle events until program has started. Hopefully fixes a crash reported
  by the crashreporter once.
* Remove check for jack in rt midi in check_install script.


Most important changes 1.9.21 -> 1.9.22:
* Crashreporter.
* Linux version works properly without first cd into the path of the radium binary.


Most important changes 1.9.20 -> 1.9.21:
* Change system font to Lato Black (http://www.latofonts.com)
* Fix crashes on Windows related to garbage collection.
  (Could for instance happen when loading the demo song)


Most important changes 1.9.19 -> 1.9.20:
* alsa: Fix name of input port, not always use "in".
* Menu option to GFX_message


Most important changes 1.9.18 -> 1.9.19:
* All stops are hard stops (Fix for stopping not always stopping sounds)
* Loop on/off button for samples
* Custom GFX for checkboxes and pushbuttons
* Fix color for qcomoboxes.
* Run check_dependencies.sh before making packages
* Remove separator between Reset and Help


Most important changes 1.9.17 -> 1.9.18:
* Remove loop from guitar sample in demo song


Most important changes 1.9.16 -> 1.9.17:
* Fix alsa midi input. (two ports named "in" made chaos)
  * Radium can be used as midi sampler now. Only one instrument is supported though,
    but as a work-around, several Radium instances can run simultaneously.
* Get wav loop points from smpl chunk, not by using Loop Start/Loop End cues
* Support looping for wav files with more than one LIST chunk
* Less verbose when pressing keys
* Remove textborder and minnodesize options


Most important changes 1.9.15 -> 1.9.16:
* Circumvent confusing GC_is_disabled API (fix for playing sometimes taking many seconds to start)
* Dont update gfx from jack thread (horror)


Most important changes 1.9.14 -> 1.9.15:
* Update linenumber width (fix for blocks with more than 1000 lines)
* Fix building packages when theres no python2 executable
* Fix import midi files with many notes in tracks in non-polyphony mode
* Remove limitation on delete track


Most important changes 1.9.13 -> 1.9.14:
* Remove some divide by zero bugs


Most important changes 1.9.12 -> 1.9.13:
* Many gui improvements. Adjusted colors, etc.
* Switch shift and right-alt keybindings for left/right arrow. Now:
  * Right Shift + left/right moves cursor to previous / next track
  * Right Alt + left/right changes velocity for note playing under cursor.
* Need to press altgr or right shift less than 0.25 seconds to play.
* Radium doesn't freeze when trying to play after it has been running
  for a few hours.
* Dont create block undo too often. (Most notable when changing velocity
  using keyboard)
* Don't reset temponode size when zooming.
* Fix pesky memory bug, sometimes causing the program to quit because
  it ran out of memory. Graphics should also be snappier in some situations
  after this fix. It was caused by the gfx queue growing and growing
  when QWidget::paintEvent wasnt called directly after drawing something.
* Doesn't add the first caracter in the shortcut starting a line reader.
  Was only a problem in windows.
* Dont crash when pasting block in certain situations.
* Remove reading of uninitialized memory in slider painter.


Most important changes 1.9.11 -> 1.9.12:
* Fix various horrible bugs for those with non-C locale settings
  Thanks to "DoosC" for helping to debug.
* Various graphical improvements
* TAB switches between common window configs
* Show message box if parsing soundfont file fails
* Add -Wall option to RELEASE build
* Make track headers of current instrument more distinct
* Larger window during startup


Most important changes 1.9.10 -> 1.9.11:
* Fix missing sound on AMD phenom processor. Thanks to DoosC for helping to debug.
* Disable text border by default (except for line numbers), and ignore saved text border setting
* Ignore minnodesize and use font height*2 instead.
* Only show gfx nodes for the track the mouse is currently placed over.
* Implement reset font size for qt
* Demo song audio adjustments
* Set default colors/fonts menu options
* Qt: set DontUseNativeMenuBar on all systems, not just osx. Menues requires mono font to look right
  (fix for unity)
* Dont stop playing when changeing patch for a track
* Various graphical improvements


Most important changes 1.9.9 -> 1.9.10:
* Use x instead of STP. Idea: Damir Sijakovic

Most important changes 1.9.8 -> 1.9.9:
* Better looking temponodes.

Most important changes 1.9.6 -> 1.9.8:
* "make install" should work without first running the program.
* Fixed denormals on 32 bit Linux. (-mpmath=sse)
* Shift+left/right to change note volume works even if cursor is not
  placed on the same line as the note name.
* Fixed zooming-in-a-lot bug.
* Breakpoint nodes for velocity lines are only shown when mouse cursor is
  placed in the track.
* Breakpoint curves for velocity replaced grayed areas. (looks much better)
* Waveform data is shown in the editor for the sampler instrument.
* Pan-per-note for the sampler instrument. Means that the track panner works
  for that track only.
* Fixed samplefile font in sample file selector.
* Improved graphics for breakpoint curves/nodes for effects.
* Different panning algorithm. (Dont just lower volume in one channel on stereo files)
  (Warning: may change sound of existing songs)
* Remove -mtune=native for linux builds.
* Linux: Use standard paths for lrdf files
* Instructions on how to compile from git


Most important changes 1.9.3 -> 1.9.6:
* Undo sample change
* Text looks better.
* Upgrade bdw-gc to 7.2d
* Play block when pressing "Alt Gr" or Right Shift alone.
* Menu improvements and clean ups.
* Gradient color tempo-show track.
* Midi Input port can be configured.
* Radium window icon
* Filename is shown for the Sampler Instrument and the FluidSynth instrument
* Current "chip" (mixer object) is drawn in more distinct colors.
* Fixed release value in Sampler instrument.
* Notes can be added while playing. (works quite okay)
* Keyboard is functional in the font and color setting windows.
* Menu option to configure system font.
* GUI should look okay also for other system font sizes than 8.
* Chip (mixer object) name is updated properly.
* Demo-song clean-up.
* The looks when zoomin in on a single line is cleaner. (Left shift + up/down)


Most important changes 1.9.2 -> 1.9.3:
* Never expand editor area when changing track width
* Various build fixes from Dominique Michel
* Use system font size for menues, not 8
* Adjust slider text position
* Dont crash if loading plugin fails



Most important changes 1.9.1 -> 1.9.2:
* Give editor keyboard-focus when clicking it
* Option to set number of lines to scroll when adding notes. (suggested by Florian Paul Schmidt)
* Right click to reset slider value
* Properly load samples. (Thanks to Erik de Castro Lopo for explaining the libsndfile API)
* Avoid playing samples two times (almost exactly on top of each other) when clicking the filename of a sample. (Bug found by Florian Paul Schmidt)
* Make bindir and libdir overridable in the Makefile. Requested by Dominique Michel to easier make ebuilds for Radium.
* Support several paths in LADSPA_PATH (Bug reported by Florian Paul Schmidt)
* Fix readline build errors (Bug reported by Florian Paul Schmidt)



Most important changes 0.69.3 -> 1.9.1:
* Audio.
* A quick-to-use modular mixer. Jack ports can be inserted anywhere.
* VST plugins and instruments (native, not via wine)
* LADSPA
* Fluidsynth instrument
* 20 STK instruments. (Physical modelling)
* Sampler instrument (soundfiles, xi instruments, soundfonts)
* Multiband compressor
* Built-in filters and equalizers.
* Simple arpeggiator
* Drunk input velocity
* Various GUI improvements
* Pitch expand made available in the menues.
* Tapiir plugin
* Zita reverb plugin
* Demo song
* Reconfigured keybindings
* Various bug fixes


Most important changes 0.69.2 -> 0.69.3:
* Fix font update problem after changing size
* Add Append Track function. Using F key, same as Append Block.
* Add forgotten Swap Tracks function to menues
* More defined editor color
* Changed default build to use Qt for visual on Linux.
  QImage seems to be as fast as GdkPixmap.


Most important changes 0.69.1 -> 0.69.2:
* Graphics is updated after changing font
* Dont clear graphics to the right of rightmost track
* Check graphic update regularly instead of the player signalling the main thread
* Bug fixes and source cleanups.


Most important changes 0.69.0 -> 0.69.1:
* Faster and fancier graphics for Windows and OSX
* Use less memory


Most important changes 0.68.9 -> 0.69.0:
* Less automatic increase of window size
* More shortcuts for keypadless computers:
	Left Shift + 0...9 : Select track
	Left Ctrl  + 0...9 : Select track on/off


Most important changes 0.68.8 -> 0.68.9:
* Snappier graphics.
* Fix graphics after loading
* Better keybindings for keypadless computers
* Changed solo track function to switch between solo track
  and all tracks on, depending on whether it was on or not.
* Don't crash when exiting while playing


Most important changes 0.68.7 -> 0.68.8:
* Fix colors and font on mac.
  (The default configuration file was not found.)


Most important changes 0.68.6 -> 0.68.7:
* Update status bar also if mouse button is not pressed.
* Print track volume and track pan in status bar also when mouse button is not pressed.
* Remove GFX artifacts after loading.
* Enable RELEASE build for OSX binary.


Most important changes 0.68.2 -> 0.68.6:
* Windows and Mac OS X port.
* Replaced GTK Requester and GTK popup menu with Qt code.
* Focus fixes
* Fix Qt build. (GTK is still the default on Linux, but
  Windows and OSX only uses Qt.)
* Fix Add Instrument menu option. (F12)
* Qt: Ignore TEXT_BOLD font flag. Let the user decide instead.
* Fix CLang 3.0 compilation on Linux.
* Qt: Check periodically if program should quit.
* Make Radium work without write accesss to binary folder.
* Display correct Instrument after loading.


Most important changes 0.68.1 -> 0.68.2:
* Fix left mouse down when selecting font or FX.


Most important changes 0.68.0 -> 0.68.1:
* Clean up jack when exiting
* Proper fix for lost KDE left mouse events in Ubuntu 12.
* Requester focus fixes
* Use bold font by default


Most important changes 0.67.3 -> 0.68.0:
* Use GTK popup menu for selecting FX
* Replaced use of xterm with GTK widget.
* The "X11_Qtstuff" is not needed anymore
* Windows version is fully functional, except keyboard handling.
* Various keyboard focus fixes.
* Qt: Move wheel event handler to the main window. Make the mouse wheel work everywhere.
* Fixed nasty list bug which caused player bugs.
* Removed setproctitle. Radium is now a normal executable.
* End Ctrl+C process when main process dies
* Various tweaks and fixes.


Most important changes 0.67.2 -> 0.67.3:
* Checkbuttons for system style and system color
* Fix embedding
* Don't crash if cancelling import midi
* Don't crash on Ubuntu if setproctitle was already installed
* Fix SpinBox focus
* Various windows fixes


Most important changes 0.67.1 -> 0.67.2:
* Fix make install
* Mingw fixes


Most important changes 0.67.0 -> 0.67.1:
* Fix colors


Most important changes 0.66.1 -> 0.67.0:
* Ported GUI to Qt4
  (Editor graphics is still written in GTK2, running in an embedded wiget.)
* More colorful default colors
* Fix left mouse in KDE
* Various build fixes
* Compiles under mingw.
  (Tested in wine and Windows7, but it doesn't work very well yet.)


Most important changes 0.66.0 -> 0.66.1:
* Various build fixes


Most important changes 0.65.12 -> 0.66.0:
* New GTK2 visual backend. (enabled by default)
  * Looks better and has less focus problems.
  * Makes it possible to port the rest of the program
    to QT4 without losing graphical performance. (QT4 is very slow.)
    (Mixing QT3 and QT4 in the same binary doesn't work.)
* RELEASE buildtype.
* Various build fixes
* Various bug fixes and improvements


Most important changes 0.65.11 -> 0.65.12:
* Include the gc-7.2c.tar.gz file.


Most important changes 0.65.10 -> 0.65.11:
* Fix nodeline selection


Most important changes 0.65.9 -> 0.65.10:
* Antialiased lines
* Adjusted tempo colors


Most important changes 0.65.8 -> 0.65.9:
* Fix race condition for midi input
* Remove memory allocation in the rtmidi jack process
* Fix broken ringbuffer implementation in rtmidi. (Quick fix, it's probably still
  broken on some (or all) platforms. Planning to use the portaudio ringbuffer implementation
  in a later commit.)


Most important changes 0.65.6 -> 0.65.8:
* Midi input editing.
* Removed the custom resize window box. (extremely buggy, and not very useful)
* midi: increased latency from 1.95ms to 5ms. (This should probably be configurable)


Most important changes 0.65.0 -> 0.65.6:
* Setting port for instrument will not crash the program
* Many build improvements
* Blocklist and Playlist are properly updated when loading standard midi file.
* Sample accurate jack midi
* Accurate mouse coordinates
* Closing the xterm window will not lock the program
* Options to turn off overriding of Qt colors and Qt style
* Fast jack port probing
* Only create one jack client
* Works even if python links to python3 instead of python2
* Fixed All Sounds Off menu option
* Graphics fully updated after using menu
